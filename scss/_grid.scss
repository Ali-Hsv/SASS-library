@use "sass:math";

$grid-colums: 12;

$grid-gap: (
    "0": 0px,
    "5": 5px,
    "10": 10px,    
    "15": 15px,    
    "20": 20px,    
    "25": 25px,    
    "30": 30px,    
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

//base layout classes
.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0px 20px;
    box-sizing: border-box;
}

.row{
    display: flex;
    // flex-direction: row;
    // flex-wrap: wrap;
    flex-flow: row wrap;
}

//gap classes
@each $key, $val in $grid-gap{
    .gap-#{$key} > *{
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}

//gap classes
@each $val in $layout-values{
    .justify-#{$val}{
        justify-content: $val;
    }
}

//col classes
@include xs{
    @for $i from 1 through $grid-colums{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colums);
        }
    }
}

@include sm{
    @for $i from 1 through $grid-colums{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colums);
        }
    }
}

@include md{
    @for $i from 1 through $grid-colums{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colums);
        }
    }
}

@include lg{
    @for $i from 1 through $grid-colums{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colums);
        }
    }
}

@include xl{
    @for $i from 1 through $grid-colums{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-colums);
        }
    }
}


